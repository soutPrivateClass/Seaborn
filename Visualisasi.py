import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from scipy.stats import zscore # UNTUK MERUBAH NILAI DATA MENJADI NILAI ABSOLUTE
from warnings import filterwarnings # UNTUK MENGHILANGKAN WARNING / PERINGATAN
import os

sns.set()
os.system("clear")
filterwarnings('ignore')

"""
SEABORN ADALAH SALAH SATU LIBRARY YANG ADA DI PYTHON UNTUK MELAKUKAN VISUALISASI DATA, SAMA HALNYA DENGAN MATPLOTLIB
NAMUN, SEABORN INI KHUSUS UNTUK MEMBUAT VISUALISASI STATISTIK YANG MEMILIKI KUALITAS LEBIH BAIK DARI MATPPLOTLIB
"""

dataKapal = pd.read_csv('kapal_titanic.csv')
print(dataKapal.head())
print(50*"=")

# DISTRIBUTION PLOT (AKAN MENGETAHUI BENTUK DATA SECARA KESELURUHAN) :
# BATANG DALAM GRAFIK DISEBUT HISTOGRAM
sns.distplot(dataKapal.age, kde=False, bins=50) # kde UNTUK MENGHILLANGKAN GARIS KURVA, bins UNTUK MANIPULASI KETEBALAN HISTOGRAM
plt.show()

# MENGGABUNGKAN 2 DATA SERIES DENGAN SEABORN :
sns.jointplot(x ='age', y = 'fare', data = dataKapal, kind='reg') # sumbu x = KOLOM age, sumbu y = KOLOM fare PADA DATA KAPAL, kind  UNTUK MENENTUKAN MODEL GRAFIK, SECARA DEFAULT YAITU MENGGUNAKAN SCATTER
plt.show()

# MEMBERSIHKAN OUTLIER (OBJEK DATA YANG MENYIMPANG SECARA SIGINIFIKAN) DENGAN 2 CARA :

# 1. CARA MANUAL :
# MENCARI DATA YANG MEMILIKI POTENSI OUTLIER  
filterData = dataKapal.fare[dataKapal.fare>400]
# MENGHAPUS DATA YANG MEMILIKI POTENSI OUTLIER
dataKapalNew = dataKapal.drop([258, 679, 737])
sns.jointplot(x='age',y='fare',data=dataKapalNew)
plt.show()

# 2. DISTRIBUSI Z (NORMAL) :
# KEDUA CARA INI YAIU : CARA MANUAL DAN CARA DISTRIBUSI Z SCORE INI MEMILIKI HASIL YANG BERBEDA, NAMUN TIDAK TERLALU SIGNIFIKAN
# HAL YANG HAARUS DIPERHATIKAN PADA CARA DISTRIBUSI Z SCORE, IALAH :
# 1. HITUNG NILAI Z :
nilaiZ = zscore(dataKapal.fare)
# 2. RUBAH MENJADI ABSOLUTE DATA (MERUBAH NILAI MENJADI DATA POSITIF)
nilaiAbsolute = np.abs(nilaiZ)
# 3. FILTER ATAU ELIMINASI DATA OUTLIER YANG BIASANYA MEMILIKI NILAI LEBIH DARI 3
filterData = nilaiAbsolute<3
# 4. VISUALISASIKAN
dataBaru = dataKapal[filterData]
sns.jointplot(x='age', y='fare', data = dataBaru)
plt.show()

# PAIRPLOT (RINNGKASAN DARI DATA - DATA NUMERIK BERBENTUK GRAFIK)
sns.pairplot(dataKapal, hue='sex') # hue UNTUK MENGGANTI WARNA SEKALIGUS MEMBERIKAN ATAU MENAMBAH MAKNA ATAU INSIGHTS DENGAN PLOT PADA KATEGORI
plt.show()